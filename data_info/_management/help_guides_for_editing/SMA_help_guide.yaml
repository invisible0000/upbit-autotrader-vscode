variable_id: SMA
help_documents:
  concept:
    title: 단순이동평균의 이해
    content: |
      단순이동평균(Simple Moving Average, SMA)은 지정된 기간 동안의 종가를 산술평균한 값으로, 가격의 전반적인 추세를 파악하는 가장 기본적이면서도 강력한 기술적 지표입니다.
      모든 기술적 분석의 기초가 되는 SMA는 시장의 노이즈를 제거하고 주요 추세 방향을 명확하게 보여주는 핵심 도구입니다.

      ## 기본 계산 공식과 특성
      SMA = (P1 + P2 + P3 + ... + Pn) ÷ n
      여기서 P는 각 기간의 종가, n은 설정한 기간 수입니다.

      SMA는 price 카테고리의 price_comparable 그룹에 속하며, 차트상에서 overlay 형태로 가격 차트 위에 직접 표시됩니다.
      이는 현재가와 직접적인 비교가 가능하여 지지/저항선 역할을 수행할 수 있음을 의미합니다.

      ## 후행지표의 특성과 의미
      SMA는 전형적인 후행지표(Lagging Indicator)로, 이미 발생한 가격 변화를 반영합니다.
      이러한 특성은 단점처럼 보이지만, 실제로는 시장의 잡음을 걸러내고 신뢰할 수 있는 추세 신호를 제공하는 장점이 됩니다.
      급격한 가격 변동이나 일시적인 스파이크에 덜 민감하게 반응하여 안정적인 거래 기준을 제공합니다.

      모든 과거 데이터에 동일한 가중치를 부여하는 SMA의 특성상, 가격 변화에 대한 반응이 점진적이고 부드럽습니다.
      이는 감정적 거래를 방지하고 체계적인 투자 접근법을 가능하게 합니다.

      ## 기간별 SMA의 의미와 활용
      단기 SMA(5-20일)는 최근 가격 움직임에 더 민감하게 반응하여 빠른 추세 변화를 포착합니다.
      하지만 잦은 신호 발생으로 인해 거래 비용이 증가하고 거짓 신호의 위험도 높아집니다.

      중기 SMA(20-50일)는 실용적인 거래에 가장 널리 사용되는 설정으로, 안정성과 민감성의 균형을 제공합니다.
      특히 20일 SMA는 약 한 달간의 거래일을 반영하여 단기 추세를 파악하는 데 효과적입니다.

      장기 SMA(100-200일)는 주요 추세의 방향을 파악하는 데 사용되며, 200일 SMA는 장기 상승/하락 추세의 분기점으로 널리 인정받습니다.

      ## 동적 지지/저항선의 역할
      상승 추세에서 SMA는 동적 지지선 역할을 수행합니다. 가격이 SMA까지 하락했다가 다시 상승하는 패턴은 추세의 건전성을 확인해주는 신호입니다.
      반대로 하락 추세에서는 SMA가 동적 저항선으로 작용하여 가격이 SMA를 돌파하지 못하고 다시 하락하는 패턴을 보입니다.

      이러한 특성으로 인해 SMA는 진입점 탐색뿐만 아니라 손절매 기준 설정에도 효과적으로 활용됩니다.
      SMA 아래로 가격이 이탈할 때 상승 추세의 종료를 의미할 수 있으므로 리스크 관리의 기준점이 됩니다.

      ## 시장 상황별 SMA 해석
      강한 추세 시장에서는 SMA의 기울기가 명확하고 가격이 SMA에서 크게 벗어나지 않는 특징을 보입니다.
      이때 SMA는 추세 지속 신호를 제공하며, SMA로의 되돌림은 추가 진입 기회로 활용할 수 있습니다.

      횡보 시장에서는 SMA가 수평에 가까운 기울기를 보이며 가격이 SMA 위아래로 빈번하게 오갑니다.
      이런 상황에서는 SMA 단독 신호보다는 다른 지표와의 조합을 통한 신호 필터링이 필요합니다.

  usage:
    title: SMA 활용 전략
    content: |
      SMA는 트리거 빌더에서 추세 확인과 진입/청산 시점을 결정하는 핵심 변수입니다.
      가격과 SMA의 관계, 그리고 서로 다른 기간의 SMA 간 관계를 통해 다양한 매매 전략을 구현할 수 있습니다.

      ## 트리거 빌더 기본 문법
      ```
      조건: CURRENT_PRICE > SMA_20
      액션: 상승 추세 확인, 매수 진입 고려

      조건: SMA_20 > SMA_60
      액션: 중기 상승 추세 확인

      조건: CURRENT_PRICE < SMA_20 AND SMA_20[1] > SMA_20
      액션: 추세 전환 신호, 기존 포지션 청산
      ```

      SMA의 기울기 변화를 감지하여 추세 전환의 조기 신호를 포착할 수 있습니다.
      SMA[1] > SMA와 같은 표현으로 이전 값과 현재 값을 비교하여 방향성 변화를 감지합니다.

      ## 골든 크로스/데드 크로스 전략
      ```
      # 골든 크로스 (상승 신호)
      IF SMA_20 > SMA_60 AND SMA_20[1] <= SMA_60[1]:
          단기선이 장기선 상향 돌파
          액션: 매수 신호 발생

      # 데드 크로스 (하락 신호)
      IF SMA_20 < SMA_60 AND SMA_20[1] >= SMA_60[1]:
          단기선이 장기선 하향 돌파
          액션: 매도 신호 발생

      # 확인 조건 추가
      IF GOLDEN_CROSS AND CURRENT_PRICE > SMA_200:
          장기 상승 추세 내 골든 크로스
          액션: 높은 신뢰도 매수 신호
      ```

      골든 크로스와 데드 크로스는 가장 널리 사용되는 SMA 신호이지만, 확인 조건을 추가하여 신뢰도를 높이는 것이 중요합니다.
      특히 장기 SMA(200일) 위에서 발생하는 골든 크로스는 더 강력한 신호로 해석됩니다.

      ## 다중 SMA 필터링 시스템
      ```
      # 완벽한 정렬 조건
      IF SMA_20 > SMA_60 > SMA_200 AND CURRENT_PRICE > SMA_20:
          완벽한 상승 정렬
          액션: 강력한 매수 신호

      # 정렬 붕괴 감지
      IF SMA_20 < SMA_60 OR SMA_60 < SMA_200:
          추세 정렬 붕괴 시작
          액션: 포지션 축소 또는 관망
      ```

      여러 기간의 SMA가 순서대로 정렬된 상태는 강한 추세를 의미합니다.
      정렬이 무너지기 시작할 때는 추세 전환의 초기 신호로 해석할 수 있습니다.

      ## 동적 지지/저항 활용 전략
      ```
      # SMA 지지선 테스트
      IF CURRENT_PRICE <= SMA_20 * 0.98:  # SMA 2% 아래까지 하락
          지지선 테스트 구간
          액션: 매수 관심 구간

      IF CURRENT_PRICE > SMA_20 AND PREV_PRICE <= SMA_20:
          지지선에서 반등 확인
          액션: 매수 신호 발생

      # SMA 저항선 돌파
      IF CURRENT_PRICE > SMA_20 * 1.02 AND VOLUME > AVG_VOLUME * 1.5:
          거래량을 동반한 저항선 돌파
          액션: 강력한 돌파 매수
      ```

      SMA를 동적인 지지/저항선으로 활용할 때는 정확한 터치보다는 일정 범위(2-3%) 내에서의 반응을 관찰합니다.
      거래량 증가와 함께 발생하는 돌파는 더 신뢰할 수 있는 신호입니다.

      ## 시간 프레임별 SMA 조합
      ```
      # 멀티 타임프레임 분석
      daily_trend = SMA_200_1D  # 일봉 200일선으로 대세 판단
      hourly_entry = SMA_20_1H  # 1시간봉 20선으로 진입 타이밍

      IF daily_trend_up AND hourly_sma_pullback:
          대세 상승 + 단기 조정 완료
          액션: 최적 진입 타이밍
      ```

      상위 시간대에서 전체적인 추세를 확인하고, 하위 시간대에서 구체적인 진입 타이밍을 포착하는 방식입니다.
      이는 큰 추세에 순응하면서도 좋은 진입점을 찾을 수 있게 해줍니다.

  advanced:
    title: SMA 고급 활용 전략
    content: |
      SMA의 고급 활용은 전통적인 이동평균 분석을 넘어서 적응형 매개변수, 통계적 신호 필터링, 그리고 기계학습 기반 최적화를 통합한 정교한 추세 분석을 포함합니다.
      현대 퀀트 투자의 핵심 기법들을 SMA 기반 전략에 적용하여 성과를 극대화할 수 있습니다.

      ## 적응형 SMA 시스템 (Adaptive SMA)
      ```python
      # 변동성 기반 기간 조정
      current_volatility = calculate_atr_ratio(period=20)
      base_period = 20

      # 변동성이 높을 때는 더 긴 기간 사용
      adaptive_period = int(base_period * (1 + current_volatility))
      adaptive_sma = calculate_sma(prices, adaptive_period)

      IF adaptive_period > base_period * 1.5:
          고변동성 대응: 보수적 SMA 적용
      ELIF adaptive_period < base_period * 0.8:
          저변동성 활용: 민감한 SMA 적용
      ```

      시장 변동성에 따라 SMA의 기간을 동적으로 조정하여 시장 상황에 적응적인 신호를 생성합니다.
      고변동성 구간에서는 더 긴 기간을 사용하여 노이즈를 줄이고, 저변동성에서는 더 짧은 기간으로 민감도를 높입니다.

      ## 통계적 유의성 기반 SMA 신호
      ```python
      # SMA 돌파의 통계적 유의성 검정
      price_sma_distance = (current_price - sma_value) / sma_value
      historical_distances = calculate_historical_distances(period=252)

      # Z-score 계산으로 돌파의 이상성 측정
      z_score = (price_sma_distance - historical_distances.mean()) / historical_distances.std()

      IF z_score > 2.0:  # 95% 신뢰구간 초과
          통계적으로 유의한 상향 돌파
          액션: 강력한 매수 신호
      ELIF z_score < -2.0:
          통계적으로 유의한 하향 이탈
          액션: 강력한 매도 신호
      ```

      SMA 돌파의 통계적 유의성을 Z-score로 측정하여 일반적인 변동과 진짜 신호를 구별합니다.
      이는 거짓 신호를 크게 줄이고 신뢰할 수 있는 돌파만을 거래 신호로 활용할 수 있게 합니다.

      ## 머신러닝 기반 SMA 최적화
      ```python
      # 유전 알고리즘을 통한 SMA 기간 최적화
      def fitness_function(sma_periods):
          """SMA 조합의 성과를 평가하는 함수"""
          returns = backtest_sma_strategy(sma_periods)
          sharpe_ratio = calculate_sharpe_ratio(returns)
          max_drawdown = calculate_max_drawdown(returns)
          return sharpe_ratio - (max_drawdown * 0.5)

      # 최적 SMA 조합 탐색
      optimal_periods = genetic_algorithm_optimization(
          fitness_function,
          population_size=100,
          generations=50
      )

      # 동적 기간 조정
      current_optimal_sma = adaptive_sma_selection(market_conditions, optimal_periods)
      ```

      유전 알고리즘이나 베이지안 최적화를 사용하여 현재 시장 조건에 최적화된 SMA 기간을 동적으로 선택합니다.
      이는 시장 체제 변화에 따른 최적 매개변수의 변화에 자동으로 적응할 수 있게 해줍니다.

      ## 체제 변화 탐지 SMA
      ```python
      # Regime-Switching Model과 SMA 결합
      from sklearn.mixture import GaussianMixture

      # 시장 체제 분류 (상승/하락/횡보)
      market_features = create_market_features(prices, volumes, sma_slopes)
      regime_model = GaussianMixture(n_components=3)
      current_regime = regime_model.predict([market_features[-1]])[0]

      # 체제별 SMA 전략 조정
      if current_regime == 0:  # 상승 체제
          sma_strategy = "trend_following"
          signal_threshold = 0.02
      elif current_regime == 1:  # 하락 체제
          sma_strategy = "mean_reversion"
          signal_threshold = 0.03
      else:  # 횡보 체제
          sma_strategy = "range_bound"
          signal_threshold = 0.01
      ```

      Hidden Markov Model이나 Gaussian Mixture Model을 사용하여 시장 체제를 자동으로 식별하고,
      각 체제에 최적화된 SMA 전략을 적용합니다.

      ## 볼라틸리티 조정 SMA 밴드
      ```python
      # Bollinger Band 개념을 SMA에 적용
      sma_20 = calculate_sma(prices, 20)
      sma_volatility = calculate_rolling_std(sma_20, 20)

      upper_band = sma_20 + (sma_volatility * 2)
      lower_band = sma_20 - (sma_volatility * 2)

      # 동적 진입/청산 기준
      IF price > upper_band:
          SMA 기준 과매수 영역
          액션: 매도 또는 익절 고려
      ELIF price < lower_band:
          SMA 기준 과매도 영역
          액션: 매수 또는 손절 고려
      ```

      SMA 자체의 변동성을 측정하여 동적인 상한/하한선을 생성합니다.
      이는 시장 변동성에 따라 조정되는 진입/청산 기준을 제공합니다.

      ## 고주파 SMA 최적화
      ```python
      # Exponentially Weighted Moving Average와의 하이브리드
      alpha = 2 / (period + 1)
      hybrid_ma = alpha * price + (1 - alpha) * sma_value

      # Kalman Filter를 적용한 SMA 노이즈 제거
      filtered_sma = kalman_filter(sma_values, process_noise=0.01)

      # 고주파 신호 최적화
      IF abs(hybrid_ma - filtered_sma) > noise_threshold:
          신호 품질 저하 감지
          액션: 신호 필터링 강화
      ```

      고주파 거래 환경에서 SMA의 노이즈를 최소화하고 신호 품질을 향상시키기 위한 고급 필터링 기법을 적용합니다.
      이는 시장 마이크로스트럭처로 인한 잡음을 효과적으로 제거하면서 핵심 추세 신호는 보존합니다.

      이러한 고급 기법들은 전통적인 SMA 분석을 현대적인 정량 분석 수준으로 발전시켜 실전 트레이딩에서 상당한 경쟁 우위를 제공할 수 있습니다.
