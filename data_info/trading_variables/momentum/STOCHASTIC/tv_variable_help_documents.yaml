STOCHASTIC:
  concept:
    title: 스토캐스틱의 이해
    content: '스토캐스틱 오실레이터는 George Lane이 1950년대에 개발한 모멘텀 지표로, 특정 기간 동안의 최고가와 최저가 범위에서
      현재 종가의 상대적 위치를 백분율로 나타냅니다.

      이 지표는 시장의 과매수/과매도 상태를 포착하고 추세 전환 시점을 예측하는 데 매우 효과적인 도구로 평가받고 있습니다.


      ## 기본 계산 공식과 구성

      %K = ((현재 종가 - 최근 n일간 최저가) / (최근 n일간 최고가 - 최근 n일간 최저가)) × 100

      %D = %K의 m일 이동평균


      일반적으로 %K는 14일 기간을 사용하고, %D는 %K의 3일 이동평균으로 계산됩니다.

      Fast Stochastic은 %K와 %D를 그대로 사용하고, Slow Stochastic은 %K 자체를 평활화하여 노이즈를 줄입니다.


      스토캐스틱은 momentum 카테고리의 percentage_comparable 그룹에 속하며, 0에서 100 사이의 값으로 표현되어 RSI와
      직접 비교가 가능합니다.

      차트상에서는 subplot 형태로 표시되어 독립적인 분석 패널을 형성합니다.


      ## 지표의 핵심 원리와 의미

      스토캐스틱의 핵심 아이디어는 "상승 추세에서는 종가가 고가 근처에서 형성되고, 하락 추세에서는 종가가 저가 근처에서 형성된다"는 관찰에
      기반합니다.

      따라서 %K 값이 80 이상이면 종가가 최근 범위의 상위 20% 구간에 있음을 의미하고, 20 이하면 하위 20% 구간에 있음을 나타냅니다.


      %D 라인은 %K의 평활화된 버전으로, 급격한 변동을 완화하여 더 안정적인 신호를 제공합니다.

      %K와 %D의 교차는 모멘텀 변화의 신호로 해석되며, 이는 가격 변화에 앞서 나타나는 선행적 특성을 보입니다.


      ## 과매수/과매도 구간의 해석

      전통적으로 스토캐스틱 80 이상은 과매수, 20 이하는 과매도로 해석됩니다.

      하지만 암호화폐 시장의 높은 변동성을 고려할 때, 이러한 임계값을 85/15 또는 90/10으로 조정하는 것이 더 효과적일 수 있습니다.


      과매수/과매도 상태 자체가 즉시 매매 신호는 아니라는 점이 중요합니다.

      강한 추세에서는 스토캐스틱이 장기간 극값에 머물 수 있으므로, 구간 이탈이나 다이버전스와 같은 추가 확인이 필요합니다.


      ## 다이버전스 분석의 중요성

      스토캐스틱 다이버전스는 가격과 모멘텀 간의 불일치를 나타내는 강력한 신호입니다.

      불리시 다이버전스는 가격이 더 높은 고점을 만드는 동안 스토캐스틱이 더 낮은 고점을 형성하는 것으로, 상승 모멘텀의 약화를 의미합니다.

      베어리시 다이버전스는 그 반대로, 하락 모멘텀의 약화를 나타냅니다.


      ## 시장별 특성과 조정 필요성

      암호화폐 시장에서는 24시간 거래와 높은 변동성으로 인해 스토캐스틱 해석에 특별한 주의가 필요합니다.

      갑작스러운 뉴스나 이벤트로 인한 급격한 가격 변동은 스토캐스틱을 극값으로 밀어넣을 수 있으며, 이때는 일시적인 노이즈로 해석해야 합니다.


      따라서 스토캐스틱을 단독으로 사용하기보다는 추세 지표나 거래량 분석과 함께 사용하여 신호의 신뢰도를 높이는 것이 중요합니다.

      특히 주요 지지/저항선이나 피보나치 되돌림 수준에서 발생하는 스토캐스틱 신호는 더 높은 신뢰도를 가집니다.


      ## Fast vs Slow 스토캐스틱

      Fast 스토캐스틱은 더 민감하게 반응하여 빠른 신호를 제공하지만 노이즈가 많습니다.

      Slow 스토캐스틱은 평활화를 통해 노이즈를 줄였지만 신호가 약간 지연될 수 있습니다.

      실전에서는 진입 신호는 Fast로, 청산 신호는 Slow로 사용하는 하이브리드 접근법이 효과적입니다.

      '
  advanced:
    title: 스토캐스틱 고급 활용 전략
    content: "스토캐스틱의 고급 활용은 전통적인 과매수/과매도 분석을 넘어서 확률론적 모델링, 적응형 매개변수 최적화, 그리고 기계학습\
      \ 기반 패턴 인식을 통합한 정교한 모멘텀 분석을 포함합니다.\n현대 퀀트 트레이딩의 핵심 기법들을 스토캐스틱 기반 전략에 적용하여 성과를\
      \ 극대화할 수 있습니다.\n\n## 적응형 스토캐스틱 시스템\n```python\n# 변동성 기반 기간 조정\ncurrent_volatility\
      \ = calculate_atr_ratio(period=20)\nbase_period = 14\n\n# 변동성에 따른 동적 기간 조정\n\
      adaptive_k_period = int(base_period * (1 + current_volatility * 0.5))\nadaptive_d_period\
      \ = max(3, int(adaptive_k_period * 0.2))\n\n# 적응형 스토캐스틱 계산\nadaptive_stoch =\
      \ calculate_stochastic(prices, adaptive_k_period, adaptive_d_period)\n\nIF adaptive_k_period\
      \ > base_period * 1.3:\n    고변동성 대응: 더 안정적인 스토캐스틱 신호\nELIF adaptive_k_period\
      \ < base_period * 0.8:\n    저변동성 활용: 더 민감한 스토캐스틱 신호\n```\n\n시장 변동성에 따라 스토캐스틱의\
      \ lookback 기간을 동적으로 조정하여 시장 상황에 적응적인 지표를 생성합니다.\n고변동성 구간에서는 더 긴 기간으로 노이즈를 줄이고,\
      \ 저변동성에서는 더 짧은 기간으로 민감도를 높입니다.\n\n## 확률적 스토캐스틱 모델링\n```python\n# 스토캐스틱 분포 분석\n\
      stoch_history = get_stochastic_history(period=252)\n\n# 현재 스토캐스틱 수준에서의 반전 확률\
      \ 계산\ndef calculate_reversal_probability(current_stoch, history):\n    similar_levels\
      \ = history[(history >= current_stoch - 5) &\n                           (history\
      \ <= current_stoch + 5)]\n    reversals = count_reversals_after_level(similar_levels)\n\
      \    return reversals / len(similar_levels)\n\nreversal_prob = calculate_reversal_probability(current_stochastic,\
      \ stoch_history)\n\nIF current_stochastic > 80 AND reversal_prob > 0.75:\n \
      \   통계적 고확률 반전 예상: 매도 신호\nIF current_stochastic < 20 AND reversal_prob > 0.75:\n\
      \    통계적 고확률 반전 예상: 매수 신호\n```\n\n과거 스토캐스틱 데이터의 통계적 분포를 분석하여 현재 수준에서의 반전 확률을\
      \ 정량화합니다.\n이는 단순한 임계값이 아닌 확률론적 접근을 통해 신호의 신뢰도를 수치화합니다.\n\n## Williams %R과의 융합\
      \ 분석\n```python\n# Williams %R = 스토캐스틱의 반전 버전\nwilliams_r = -1 * (stochastic_k\
      \ - 100)\n\n# 이중 모멘텀 확인 시스템\nIF stochastic_k < 20 AND williams_r > -20:\n  \
      \  이중 과매도 확인: 매우 강력한 매수 신호\n\nIF stochastic_k > 80 AND williams_r < -80:\n \
      \   이중 과매수 확인: 매우 강력한 매도 신호\n\n# 다이버전스 이중 검증\nIF stochastic_divergence AND williams_divergence:\n\
      \    이중 다이버전스 확인: 최고 신뢰도 신호\n```\n\n스토캐스틱과 Williams %R을 함께 사용하여 모멘텀 신호의 강도를\
      \ 증폭시킵니다.\n두 지표가 동시에 극값을 보이거나 다이버전스를 형성할 때는 매우 강력한 신호로 해석됩니다.\n\n## 기계학습 기반\
      \ 스토캐스틱 패턴 인식\n```python\n# LSTM을 활용한 스토캐스틱 패턴 학습\ndef create_stochastic_features(stoch_k,\
      \ stoch_d, lookback=30):\n    features = []\n    for i in range(lookback, len(stoch_k)):\n\
      \        pattern = {\n            'k_values': stoch_k[i-lookback:i],\n     \
      \       'd_values': stoch_d[i-lookback:i],\n            'k_d_divergence': calculate_divergence(stoch_k[i-lookback:i],\
      \ stoch_d[i-lookback:i]),\n            'volatility': calculate_pattern_volatility(stoch_k[i-lookback:i])\n\
      \        }\n        features.append(pattern)\n    return features\n\n# 패턴 기반\
      \ 예측 모델\nstoch_features = create_stochastic_features(stoch_k_history, stoch_d_history)\n\
      pattern_model = train_lstm_model(stoch_features, future_returns)\n\ncurrent_pattern\
      \ = extract_current_pattern(recent_stoch_values)\npredicted_direction = pattern_model.predict(current_pattern)\n\
      \nIF predicted_direction > 0.8:  # 80% 이상 상승 확률\n    ML 기반 강력한 매수 신호\n```\n\n\
      머신러닝 모델을 사용하여 복잡한 스토캐스틱 패턴과 향후 가격 움직임 간의 관계를 학습합니다.\n이는 전통적인 규칙 기반 접근법으로는 포착하기\
      \ 어려운 미묘한 패턴을 인식할 수 있게 해줍니다.\n\n## 체제 변화 적응형 스토캐스틱\n```python\n# Hidden Markov\
      \ Model을 활용한 시장 체제 분석\nmarket_regimes = detect_market_regimes(price_data, volume_data,\
      \ stoch_data)\ncurrent_regime = market_regimes[-1]\n\n# 체제별 스토캐스틱 해석 조정\nif\
      \ current_regime == \"bull_trending\":\n    # 상승 추세에서는 과매도에서만 매수\n    stoch_buy_threshold\
      \ = 30\n    stoch_sell_threshold = 85\nelif current_regime == \"bear_trending\"\
      :\n    # 하락 추세에서는 과매수에서만 매도\n    stoch_buy_threshold = 15\n    stoch_sell_threshold\
      \ = 70\nelif current_regime == \"range_bound\":\n    # 횡보에서는 전통적 기준 사용\n   \
      \ stoch_buy_threshold = 20\n    stoch_sell_threshold = 80\nelif current_regime\
      \ == \"high_volatility\":\n    # 고변동성에서는 극값에서만 신호\n    stoch_buy_threshold =\
      \ 10\n    stoch_sell_threshold = 90\n```\n\n시장 체제를 자동으로 식별하고 각 체제에 최적화된 스토캐스틱\
      \ 해석 기준을 적용합니다.\n이는 시장 상황 변화에 따른 적응적 거래 전략을 가능하게 합니다.\n\n## 고주파 스토캐스틱 최적화\n\
      ```python\n# Kalman Filter를 적용한 스토캐스틱 노이즈 제거\ndef kalman_filter_stochastic(stoch_values,\
      \ process_noise=0.01, measurement_noise=0.1):\n    filtered_values = []\n  \
      \  estimate = stoch_values[0]\n    estimate_error = 1.0\n\n    for value in\
      \ stoch_values:\n        # 예측 단계\n        prediction = estimate\n        prediction_error\
      \ = estimate_error + process_noise\n\n        # 업데이트 단계\n        kalman_gain\
      \ = prediction_error / (prediction_error + measurement_noise)\n        estimate\
      \ = prediction + kalman_gain * (value - prediction)\n        estimate_error\
      \ = (1 - kalman_gain) * prediction_error\n\n        filtered_values.append(estimate)\n\
      \n    return filtered_values\n\n# 필터링된 스토캐스틱 신호 생성\nfiltered_stoch_k = kalman_filter_stochastic(raw_stoch_k)\n\
      filtered_stoch_d = kalman_filter_stochastic(raw_stoch_d)\n\n# 고품질 신호 검증\nIF\
      \ abs(filtered_stoch_k - raw_stoch_k) > noise_threshold:\n    신호 품질 저하 감지: 거래\
      \ 대기\n```\n\n고주파 거래 환경에서 스토캐스틱의 노이즈를 최소화하고 신호 품질을 향상시키기 위한 고급 필터링을 적용합니다.\n\
      Kalman Filter는 시장 마이크로스트럭처로 인한 잡음을 효과적으로 제거하면서 핵심 모멘텀 신호는 보존합니다.\n\n## 다차원 스토캐스틱\
      \ 분석\n여러 자산의 스토캐스틱을 동시에 분석하여 시장 전체의 모멘텀 상태를 파악하고,\n개별 자산의 상대적 강도를 측정하는 고급 기법도\
      \ 활용할 수 있습니다.\n이는 페어 트레이딩이나 포트폴리오 최적화에 매우 유용한 접근법입니다.\n\n이러한 고급 기법들은 단순한 과매수/과매도\
      \ 신호를 넘어서 스토캐스틱을 정교한 모멘텀 분석 도구로 발전시켜 실전 트레이딩의 성과를 획기적으로 향상시킬 수 있습니다.\n"
  usage:
    title: STOCHASTIC 활용 전략
    content: "스토캐스틱은 트리거 빌더에서 모멘텀 전환점과 과매수/과매도 상태를 기반으로 한 매매 조건을 설정하는 핵심 변수입니다.\n\
      %K와 %D 라인의 교차, 구간 이탈, 그리고 다이버전스 분석을 통해 정교한 진입/청산 전략을 구현할 수 있습니다.\n\n## 트리거 빌더\
      \ 기본 문법\n```\n조건: STOCHASTIC_K <= 20\n액션: 과매도 관심 영역 진입 (대기 모드)\n\n조건: STOCHASTIC_K\
      \ > 20 AND STOCHASTIC_K[1] <= 20\n액션: 과매도 구간 이탈 매수 신호\n\n조건: STOCHASTIC_K >=\
      \ 80\n액션: 과매수 경고 (익절 준비)\n\n조건: STOCHASTIC_K < 80 AND STOCHASTIC_K[1] >= 80\n\
      액션: 과매수 구간 이탈 매도 신호\n```\n\n과매수/과매도 구간 진입보다는 이탈 시점을 실제 거래 신호로 사용하는 것이 더 안전합니다.\n\
      구간 진입은 관심 영역으로 설정하고, 구간 이탈 시점에서 실제 포지션을 취하는 방식입니다.\n\n## %K와 %D 라인 교차 전략\n```\n\
      # 골든 크로스 (상승 신호)\nIF STOCHASTIC_K > STOCHASTIC_D AND STOCHASTIC_K[1] <= STOCHASTIC_D[1]:\n\
      \    스토캐스틱 골든 크로스\n    액션: 매수 신호 (과매도 구간에서 발생시 더 강력)\n\n# 데드 크로스 (하락 신호)\nIF\
      \ STOCHASTIC_K < STOCHASTIC_D AND STOCHASTIC_K[1] >= STOCHASTIC_D[1]:\n    스토캐스틱\
      \ 데드 크로스\n    액션: 매도 신호 (과매수 구간에서 발생시 더 강력)\n\n# 구간별 차별화된 신호 강도\nIF GOLDEN_CROSS\
      \ AND STOCHASTIC_K < 30:\n    저점 골든 크로스: 강력한 매수 신호\nIF DEAD_CROSS AND STOCHASTIC_K\
      \ > 70:\n    고점 데드 크로스: 강력한 매도 신호\n```\n\n%K와 %D의 교차는 모멘텀 변화의 초기 신호를 제공합니다.\n\
      특히 극값 구간에서 발생하는 교차는 더 높은 신뢰도를 가지므로 차별화된 대응이 필요합니다.\n\n## 다이버전스 기반 고급 전략\n```\n\
      # 불리시 다이버전스 탐지\nIF CURRENT_PRICE > PREV_HIGH AND STOCHASTIC_K < PREV_STOCHASTIC_HIGH:\n\
      \    가격 신고점 vs 스토캐스틱 저점\n    액션: 베어리시 다이버전스 - 강력한 매도 신호\n\n# 베어리시 다이버전스 탐지\n\
      IF CURRENT_PRICE < PREV_LOW AND STOCHASTIC_K > PREV_STOCHASTIC_LOW:\n    가격\
      \ 신저점 vs 스토캐스틱 고점\n    액션: 불리시 다이버전스 - 강력한 매수 신호\n\n# 히든 다이버전스 (추세 지속 신호)\n\
      IF UPTREND AND CURRENT_LOW > PREV_LOW AND STOCHASTIC_LOW < PREV_STOCHASTIC_LOW:\n\
      \    상승 추세 중 히든 불리시 다이버전스\n    액션: 추세 지속 확인 - 추가 매수 기회\n```\n\n다이버전스는 스토캐스틱의\
      \ 가장 강력한 신호 중 하나로, 가격 움직임에 앞서 모멘텀 변화를 포착합니다.\n히든 다이버전스는 일반 다이버전스와 달리 기존 추세의\
      \ 지속을 나타내는 신호입니다.\n\n## 멀티 타임프레임 스토캐스틱 전략\n```\n# 상위 시간대 추세 확인\nIF STOCHASTIC_1D_K\
      \ > 50:  # 일봉 스토캐스틱이 50 위\n    상승 추세 바이어스\n    하위 시간대 매수 신호에만 반응\n\n# 하위 시간대\
      \ 정밀 타이밍\nIF STOCHASTIC_1H_K <= 20:\n    1시간봉 과매도 진입 대기\nIF STOCHASTIC_1H_GOLDEN_CROSS\
      \ AND STOCHASTIC_1H_K < 30:\n    최적 매수 신호 발생\n```\n\n상위 시간대에서 전체적인 모멘텀 방향을 확인하고,\
      \ 하위 시간대에서 구체적인 진입 타이밍을 포착합니다.\n이는 큰 흐름에 역행하는 거래를 방지하면서도 좋은 진입점을 찾을 수 있게 해줍니다.\n\
      \n## 변동성 조정 스토캐스틱 전략\n```\nmarket_volatility = calculate_atr_percentage(14)\n\
      \nIF market_volatility > 5:  # 고변동성 시장\n    overbought_threshold = 90\n    oversold_threshold\
      \ = 10\nELIF market_volatility < 2:  # 저변동성 시장\n    overbought_threshold = 75\n\
      \    oversold_threshold = 25\n\n# 동적 임계값 적용\nIF STOCHASTIC_K > overbought_threshold:\n\
      \    변동성 조정 과매수 신호\n```\n\n시장 변동성에 따라 스토캐스틱 임계값을 동적으로 조정하여 시장 상황에 적응적인 신호를 생성합니다.\n\
      고변동성에서는 더 극단적인 값에서 신호를, 저변동성에서는 더 보수적인 값에서 신호를 생성합니다.\n\n## 스토캐스틱 RSI 조합 전략\n\
      ```\n# 이중 확인 시스템\nIF STOCHASTIC_OVERSOLD AND RSI < 30:\n    이중 과매도 확인: 강력한 매수\
      \ 신호\n\nIF STOCHASTIC_OVERBOUGHT AND RSI > 70:\n    이중 과매수 확인: 강력한 매도 신호\n\n\
      # 신호 갈등 상황 처리\nIF STOCHASTIC_OVERSOLD AND RSI > 50:\n    신호 갈등: 추가 확인 필요 (관망)\n\
      ```\n\n스토캐스틱과 RSI를 함께 사용하여 신호의 신뢰도를 높입니다.\n두 지표가 동일한 방향을 가리킬 때는 강력한 신호로, 상반될\
      \ 때는 신중한 접근이 필요합니다.\n"
