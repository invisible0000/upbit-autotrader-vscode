PROFIT_PERCENT:
  concept:
    title: 현재 수익률(%)의 이해
    content: '현재 수익률은 매수 평균가 대비 현재 시장가격의 상대적 변화를 백분율로 표현한 핵심 성과 지표입니다.

      이는 투자 규모와 무관하게 투자 효율성을 평가하고 다른 자산과의 성과를 비교할 수 있는 표준화된 척도입니다.


      ## 기본 개념과 계산 방식

      현재 수익률은 ((현재가 - 평균 매수가) / 평균 매수가) × 100으로 계산됩니다.

      예를 들어, 평균 매수가가 100,000원이고 현재가가 110,000원이라면,

      현재 수익률은 ((110,000 - 100,000) / 100,000) × 100 = 10%가 됩니다.


      이 지표는 percentage_comparable 그룹에 속하여 다른 백분율 기반 지표들과 직접 비교가 가능합니다.

      차트상에서는 subplot 형태로 표시되어 가격 차트와 독립적으로 수익률 변화를 추적할 수 있습니다.


      ## 상대적 성과 측정의 중요성

      수익률은 투자 금액의 크기와 무관하게 투자 효율성을 측정할 수 있는 표준화된 지표입니다.

      100만원으로 10% 수익과 1억원으로 10% 수익은 절대 금액은 다르지만 투자 효율성은 동일합니다.

      이러한 특성으로 인해 서로 다른 투자 상품이나 전략 간의 성과 비교가 가능합니다.


      복리 효과를 고려할 때 수익률의 중요성은 더욱 커집니다.

      연간 20% 수익률을 5년간 지속하면 원금의 약 2.49배가 되지만,

      연간 10% 수익률로는 약 1.61배에 그칩니다.


      ## 시간 가중 수익률의 특성

      현재 수익률은 매수 시점부터 현재까지의 시간 가중 수익률을 반영합니다.

      분할 매수한 경우 각 매수의 가중평균 매수가를 기준으로 계산되므로,

      매수 타이밍과 물량에 따라 수익률이 달라질 수 있습니다.


      예를 들어, 첫 매수를 100,000원에 1개, 두 번째 매수를 80,000원에 1개 했다면,

      평균 매수가는 90,000원이 되고, 현재가가 99,000원일 때 수익률은 10%가 됩니다.


      ## 변동성과 수익률의 관계

      수익률은 단순한 성과 측정을 넘어서 투자의 변동성을 이해하는 도구이기도 합니다.

      높은 수익률이 항상 좋은 것은 아니며, 그 과정에서의 변동성과 최대 손실폭(Maximum Drawdown)을 함께 고려해야 합니다.


      샤프 비율(Sharpe Ratio)은 수익률을 변동성으로 나눈 값으로,

      단위 리스크당 수익률을 측정하여 리스크 조정 성과를 평가할 수 있습니다.


      ## 심리적 임계점과 행동 패턴

      특정 수익률 수준은 투자자의 심리적 임계점으로 작용합니다.

      일반적으로 10%, 20%, 50%, 100% 등의 라운드 넘버에서 익절 압박을 느끼며,

      -10%, -20%, -50% 등에서는 손절에 대한 갈등이 심화됩니다.


      이러한 심리적 편향을 극복하기 위해서는 사전에 명확한 수익률 기준을 설정하고

      감정적 판단을 배제한 체계적인 접근이 필요합니다.


      ## 벤치마크 대비 성과 평가

      개별 투자의 수익률은 항상 벤치마크와 비교하여 평가되어야 합니다.

      비트코인 투자라면 비트코인 지수, 전체 암호화폐 투자라면 암호화폐 지수와의 비교를 통해

      상대적 성과를 평가할 수 있습니다.


      알파(Alpha)는 벤치마크 대비 초과 수익률을 의미하며,

      베타(Beta)는 벤치마크 대비 변동성의 크기를 나타냅니다.

      '
  advanced:
    title: 현재 수익률(%) 고급 활용 전략
    content: "현재 수익률을 활용한 고급 전략은 현대 포트폴리오 이론과 행동재무학을 결합하여 수학적으로 최적화된 수익률 관리를 구현합니다.\n\
      기관투자자 수준의 정교한 성과 측정과 리스크 조정 기법을 개인 투자자 수준에서 활용할 수 있습니다.\n\n## 샤프 비율 최적화 전략\n\
      ```python\n# 실시간 샤프 비율 계산 및 최적화\nrolling_returns = calculate_rolling_returns(period=30)\n\
      rolling_volatility = calculate_rolling_volatility(period=30)\ncurrent_sharpe\
      \ = rolling_returns.mean() / rolling_volatility\n\noptimal_sharpe_threshold\
      \ = 1.5  # 업계 표준\n\nIF current_sharpe > optimal_sharpe_threshold AND PROFIT_PERCENT\
      \ > 10:\n    최적점 도달: 포지션 40% 익절\n\nIF current_sharpe < 0.5 AND PROFIT_PERCENT\
      \ > 5:\n    효율성 저하: 조기 익절 고려\n```\n\n샤프 비율을 실시간으로 모니터링하여 리스크 대비 수익률이 최적화된 시점에서\
      \ 익절을 실행합니다.\n이는 단순한 절대 수익률보다 리스크 조정 성과를 고려한 보다 정교한 접근법입니다.\n\n## 정보 비율(Information\
      \ Ratio) 기반 관리\n```python\n# 벤치마크 대비 초과 수익 및 추적 오차 분석\nbenchmark_return = get_benchmark_return()\n\
      excess_return = PROFIT_PERCENT - benchmark_return\ntracking_error = calculate_tracking_error(period=60)\n\
      \ninformation_ratio = excess_return / tracking_error\n\nIF information_ratio\
      \ > 0.75:  # 우수한 정보 비율\n    알파 실현: 초과 성과 부분 익절\n\nIF information_ratio < -0.5:\
      \  # 벤치마크 대비 저조\n    언더퍼폼 대응: 전략 재검토 및 조기 정리\n```\n\n벤치마크 대비 초과 수익률과 추적 오차를\
      \ 고려한 정보 비율 분석으로 투자 전략의 효과성을 평가합니다.\n높은 정보 비율을 달성했을 때 초과 성과를 실현하고, 낮은 정보 비율에서는\
      \ 전략을 재검토합니다.\n\n## 맥시멈 드로다운 기반 동적 관리\n```python\n# 수익률 최고점 대비 현재 하락폭 계산\npeak_profit_percent\
      \ = calculate_peak_profit(rolling_window=90)\ncurrent_drawdown = (peak_profit_percent\
      \ - PROFIT_PERCENT) / peak_profit_percent\n\nmax_tolerable_drawdown = 0.15 \
      \ # 15% 최대 허용 하락\n\nIF current_drawdown > max_tolerable_drawdown:\n    드로다운\
      \ 방어: 포지션 50% 매도\n\nIF current_drawdown < 0.05 AND PROFIT_PERCENT > peak_profit_percent\
      \ * 0.9:\n    신고점 근접: 트레일링 스탑 강화\n```\n\n수익률 최고점 대비 현재 하락폭을 실시간으로 모니터링하여 과도한\
      \ 드로다운을 방지합니다.\n이는 심리적 압박을 받기 전에 선제적으로 손실을 제한하는 정량적 접근법입니다.\n\n## 볼라틸리티 타겟팅\
      \ 전략\n```python\n# 목표 변동성 대비 현재 변동성 조정\ntarget_volatility = 0.20  # 연간 20% 목표\
      \ 변동성\ncurrent_volatility = calculate_current_volatility(period=30)\n\nvolatility_ratio\
      \ = current_volatility / target_volatility\n\nIF volatility_ratio > 1.5:  #\
      \ 과도한 변동성\n    변동성 조정: 포지션 크기 30% 감축\n    수익률 목표 하향 조정: PROFIT_PERCENT > 8%\
      \ 시 익절\n\nIF volatility_ratio < 0.7:  # 낮은 변동성\n    기회 확대: 더 높은 수익률 목표 설정\n\
      ```\n\n목표 변동성을 설정하고 현재 변동성과 비교하여 포지션 크기와 수익률 목표를 동적으로 조정합니다.\n이는 변동성 패리티 전략의\
      \ 핵심 개념을 개별 포지션 관리에 적용한 것입니다.\n\n## 베이지안 업데이트 기반 예측 모델\n```python\n# 베이지안 추론을\
      \ 통한 수익률 확률 분포 업데이트\nprior_belief = {\"bull_prob\": 0.6, \"bear_prob\": 0.4}\n\
      \ncurrent_evidence = {\n    \"profit_percent\": PROFIT_PERCENT,\n    \"market_sentiment\"\
      : market_sentiment,\n    \"technical_signals\": technical_signals\n}\n\nupdated_probabilities\
      \ = bayesian_update(prior_belief, current_evidence)\n\nIF updated_probabilities[\"\
      bull_prob\"] > 0.8 AND PROFIT_PERCENT > 15:\n    고확률 강세: 포지션 유지, 목표 상향\n\nIF\
      \ updated_probabilities[\"bear_prob\"] > 0.7:\n    약세 전환 징후: 방어적 익절\n```\n\n\
      베이지안 추론을 활용하여 시장 상황에 대한 확률적 믿음을 지속적으로 업데이트하고,\n이를 바탕으로 수익률 기반 의사결정을 최적화합니다.\n\
      \n## 기계학습 기반 수익률 예측\n현재 수익률과 다양한 시장 지표를 입력으로 하는 기계학습 모델을 통해\n향후 수익률 궤적을 예측하고\
      \ 최적의 익절/손절 타이밍을 결정할 수 있습니다.\nLSTM이나 Transformer 기반 모델을 활용하여 시계열 패턴을 학습하고 예측\
      \ 성능을 향상시킬 수 있습니다.\n\n이러한 고급 기법들은 단순한 임계값 기반 전략을 넘어서 확률론적 사고와 정량적 분석을 통합한 체계적인\
      \ 수익률 관리를 가능하게 합니다.\n"
  usage:
    title: PROFIT_PERCENT 활용 전략
    content: "현재 수익률은 트리거 빌더에서 백분율 기반 매매 조건을 설정하는 핵심 변수입니다.\n절대 금액과 달리 투자 규모에 무관한\
      \ 표준화된 기준으로 일관된 거래 전략을 구현할 수 있습니다.\n\n## 트리거 빌더 기본 문법\n```\n조건: PROFIT_PERCENT\
      \ >= 15\n액션: 포지션 30% 익절 매도\n\n조건: PROFIT_PERCENT <= -10\n액션: 손절 매도 (전체 포지션)\n\
      \n조건: PROFIT_PERCENT >= 50\n액션: 원금 회수 + 무료 포지션 전환\n```\n\n수익률 기반 단계별 익절은 투자\
      \ 규모와 무관하게 일관된 리스크 관리를 가능하게 합니다.\n15% 달성시 일부 익절로 리스크를 줄이고, 50% 달성시 원금을 회수하여\
      \ 하우스 머니로 계속 투자할 수 있습니다.\n\n## 적응형 손익분기점 관리\n```\nIF PROFIT_PERCENT >= 20:\n\
      \    트레일링 스탑 = 현재 수익률 - 5%\n\nIF PROFIT_PERCENT >= 50:\n    트레일링 스탑 = 현재 수익률\
      \ - 10%\n\nIF PROFIT_PERCENT >= 100:\n    트레일링 스탑 = 현재 수익률 - 15%\n```\n\n수익률\
      \ 수준에 따라 트레일링 스탑의 폭을 조정하여 큰 수익을 보호하면서도 추가 상승 여력을 남겨둡니다.\n높은 수익률에서는 더 넓은 트레일링\
      \ 폭을 적용하여 정상적인 조정에도 포지션을 유지할 수 있습니다.\n\n## 변동성 기반 동적 수익률 목표\n```\ndaily_volatility\
      \ = calculate_volatility(period=20)\n\nIF daily_volatility > 5:  # 고변동성\n  \
      \  익절 목표 = 10%\n    손절 기준 = -5%\n\nIF daily_volatility < 2:  # 저변동성\n    익절\
      \ 목표 = 20%\n    손절 기준 = -8%\n```\n\n시장 변동성에 따라 수익률 목표와 손절 기준을 동적으로 조정합니다.\n\
      높은 변동성에서는 빠른 차익 실현을, 낮은 변동성에서는 더 큰 수익을 추구합니다.\n\n## 시간 가중 수익률 관리\n```\nholding_days\
      \ = calculate_holding_period()\n\nIF PROFIT_PERCENT >= 10 AND holding_days <\
      \ 1:\n    단기 차익: 즉시 익절 고려\n\nIF PROFIT_PERCENT >= 5 AND holding_days > 30:\n\
      \    장기 보유: 더 높은 목표로 조정\n```\n\n보유 기간을 고려한 수익률 기준 조정은 거래 비용과 세금 효율성을 최적화합니다.\n\
      단기 거래에서는 낮은 수익률에서도 빠른 실현을, 장기 투자에서는 더 높은 수익률을 추구합니다.\n\n## 포트폴리오 레벨 수익률 관리\n\
      ```\nportfolio_correlation = calculate_correlation(assets)\n\nIF PROFIT_PERCENT\
      \ >= 30 AND portfolio_correlation > 0.8:\n    고상관 리스크: 일부 익절로 분산 효과 증대\n\nIF\
      \ individual_asset_outperformance > 50%:\n    리밸런싱: 초과 성과 자산 일부 매도\n```\n\n\
      개별 자산의 수익률이 포트폴리오 전체 균형에 미치는 영향을 고려합니다.\n한 자산의 과도한 수익으로 포트폴리오가 불균형해지는 것을 방지하는\
      \ 리밸런싱 전략을 실행합니다.\n\n## 상대적 성과 기반 조정\n```\nmarket_performance = get_market_index_return()\n\
      relative_performance = PROFIT_PERCENT - market_performance\n\nIF relative_performance\
      \ > 10:  # 시장 대비 10% 초과 성과\n    초과 성과 실현: 포지션 25% 익절\n```\n\n절대 수익률뿐만 아니라 시장\
      \ 대비 상대적 성과를 고려한 익절 전략을 실행합니다.\n시장보다 크게 앞서는 경우 일부 초과 성과를 실현하여 리스크를 관리합니다.\n"
