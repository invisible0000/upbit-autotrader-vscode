# pytest.ini - WebSocket 테스트 최적화 설정 + 한글 인코딩 개선

[tool:pytest]
# 테스트 마커 정의
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    unit: 빠른 단위 테스트 (Mock 사용)
    integration: 통합 테스트 (실제 API + DB)

# 기본 설정
testpaths = tests
# ✅ PYTEST 한글 출력 완벽 해결 (FD → SYS 캡처 변경)
# FD 캡처(기본값)는 OS 레벨 리다이렉트로 cp949 충돌 발생
# SYS 캡처는 Python 레벨 UTF-8 스트림으로 안전한 Unicode 처리
addopts = -v --tb=short -m "not slow" --color=yes --code-highlight=yes --capture=sys --tb=line

# Windows UTF-8 콘솔 강제 설정 (한글+이모티콘 지원)
# PYTHONUTF8=1이 가장 확실한 해결책 (Python 프로세스 시작부터 UTF-8 모드 강제)
env =
    PYTHONUTF8 = 1
    PYTHONIOENCODING = utf-8
    # Windows 콘솔 UTF-8 코드페이지 강제 설정 (이모티콘+한글 완벽 지원)
    CHCP = 65001
    # PowerShell $OutputEncoding 설정 (파이프라인 인코딩 최적화)
    POWERSHELL_TELEMETRY_OPTOUT = 1
    # pytest 내부 인코딩 강제
    LC_ALL = C.UTF-8
    LANG = C.UTF-8
    # 시스템 로케일 UTF-8 강제
    LC_CTYPE = C.UTF-8

# 한글 출력 최적화
console_output_style = classic
disable_test_id_escaping_and_forfeit_all_rights_to_community_support = True

# 로깅 인코딩 설정 (한글 지원)
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Doctest 인코딩 (UTF-8 명시)
doctest_encoding = utf-8

# Asyncio 설정 (WebSocket 호환성)
asyncio_mode = strict

# WebSocket 리소스 정리 경고 무시
filterwarnings =
    ignore:unclosed resource.*:ResourceWarning
    ignore:unclosed.*websocket:ResourceWarning
    ignore::pytest.PytestUnraisableExceptionWarning

# 실제 WebSocket 테스트 실행시: pytest -m slow -s
