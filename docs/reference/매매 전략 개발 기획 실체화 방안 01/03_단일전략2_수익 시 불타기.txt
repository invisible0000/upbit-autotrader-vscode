네, 문서 시리즈의 다음 장을 생성하겠습니다.

요약표의 2번에 해당하는 **규칙 \#2: 수익 시 불타기** 문서입니다.

````markdown
# 문서 #3: 규칙 #2 구현 - 수익 시 불타기 (SCALE_IN)

---

### ## 1. 규칙 개요 (Rule Overview)

이 규칙의 목적은 **포지션이 수익 중일 때, 정해진 조건에 따라 추가 매수(불타기/Pyramiding)를 실행**하여 상승 추세에서 수익을 극대화하는 것입니다.

* **역할 (Role):** `SCALE_IN`
* **활성화 상태 (Activation State):** `ACTIVE` (포지션 보유 중에만 작동)
* **핵심 컴포넌트 (Core Components):** `ProfitLossTrigger`, `ExecutionCountCondition`, `AdditionalBuy`

---

### ## 2. 컴포넌트 구성 (Component Configuration)

이 규칙은 `트리거` 1개, `추가 조건` 1개, `액션` 1개로 구성되어 복합적인 행동을 정의합니다.

```json
{
  "rule_id": "scale_in_on_profit",
  "description": "수익률 5% 도달 시, 3회까지 10만원 추가 매수",
  "activation_state": "ACTIVE",
  "trigger": {
    "component": "ProfitLossTrigger",
    "config": {
      "profit_percent": 5,
      "direction": "above"
    }
  },
  "conditions": [
    {
      "component": "ExecutionCountCondition",
      "config": {
        "target_rule_id": "scale_in_on_profit",
        "less_than": 3
      }
    }
  ],
  "action": {
    "component": "AdditionalBuy",
    "config": {
      "amount": 100000
    }
  }
}
````

#### **2.1. 트리거 설정 (`ProfitLossTrigger`)**

  * `component: "ProfitLossTrigger"`: 현재 포지션의 수익 또는 손실률을 감시하는 컴포넌트를 사용합니다.
  * `profit_percent: 5`: 이 규칙의 발동 기준이 되는 수익률을 5%로 설정합니다. 평단가 대비 현재가의 수익률을 기준으로 계산됩니다.
  * `direction: "above"`: 수익률이 기준값(5%) **이상**이 되었을 때 트리거가 발동하도록 설정합니다.

#### **2.2. 추가 조건 설정 (`ExecutionCountCondition`)**

  * `component: "ExecutionCountCondition"`: 특정 규칙의 실행 횟수를 검사하는 조건 컴포넌트입니다.
  * `target_rule_id: "scale_in_on_profit"`: 자기 자신의 `rule_id`를 참조하여, 이 규칙이 몇 번 실행되었는지 추적합니다.
  * `less_than: 3`: 실행 횟수가 3회 **미만**일 경우에만 조건을 통과시킵니다. 4번째 신호부터는 이 조건이 `False`를 반환하여 액션 실행을 막습니다.

#### **2.3. 액션 설정 (`AdditionalBuy`)**

  * `component: "AdditionalBuy"`: 기존에 보유한 포지션에 수량을 추가하는 액션 컴포넌트입니다.
  * `amount: 100000`: 조건을 모두 만족했을 때, 10만 원만큼의 수량을 추가로 매수합니다.

-----

### \#\# 3. 실행 엔진에서의 동작 방식

1.  **감시 시작**: 규칙 \#1(진입)에 의해 포지션이 생성되고 상태가 `ACTIVE`가 되면, `ExecutionEngine`은 이 규칙을 활성화합니다.
2.  **트리거 평가**: 엔진은 매 틱마다 포지션의 현재 수익률을 계산하여 `ProfitLossTrigger`의 조건(수익률 \>= 5%)을 검사합니다.
3.  **추가 조건 검사**: 트리거 조건이 충족되면, 엔진은 `ExecutionCountCondition`을 검사합니다. 현재 이 규칙의 실행 횟수가 3회 미만인지 확인합니다.
4.  **액션 실행**: 트리거와 추가 조건이 모두 `True`이면, 엔진은 `AdditionalBuy` 액션을 실행합니다.
5.  **상태 업데이트**: 추가 매수 체결 후, 포지션의 평단가와 보유 수량이 업데이트됩니다. 동시에 이 규칙의 내부 실행 횟수 카운터가 1 증가합니다.
6.  **반복 또는 중지**: 포지션이 계속 유지되는 한, 이 과정은 최대 3번까지 반복될 수 있습니다. 실행 횟수가 3에 도달하면, 더 이상 이 규칙은 발동하지 않습니다.

<!-- end list -->

```
```