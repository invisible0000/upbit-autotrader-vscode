네, 문서 시리즈의 다음 장을 생성하겠습니다.

이전 조합(문서 \#10)에 **동적인 청산 규칙**을 추가하여, 시장 상황에 더 유연하게 대응하는 예시입니다. **문서 \#11**입니다.

```markdown
# 문서 #11: 조합 예시 3 - 트레일링 스탑 추가 (규칙 #1 ~ #4)

---

### ## 1. 조합 구성 변경 (Combination Composition Change)

`문서 #10`의 '계획된 익절' 방식은 목표 수익률에 도달해야만 청산이 가능하다는 한계가 있습니다. 여기에 **시장 추세의 변화를 감지하여 청산하는 '트레일링 스탑' 규칙을 추가**하여 전략의 안정성을 높입니다.

* **기존 규칙**
    * **규칙 #1**: `RSI 과매도 진입 (ENTRY)`
    * **규칙 #2**: `수익 시 불타기 (SCALE_IN)`
    * **규칙 #3**: `계획된 익절 (EXIT)`
* **새로 추가된 규칙**
    * **규칙 #4**: `트레일링 스탑 (EXIT)`

---

### ## 2. 핵심 상호작용: 출구 전략의 경쟁 (Core Interaction: A Race Between Exit Strategies)

이제 이 조합에는 `규칙 #3`과 `규칙 #4`라는 **두 개의 `EXIT` 역할 규칙**이 존재합니다. 포지션이 `ACTIVE` 상태가 되면, `ExecutionEngine`은 이 두 청산 규칙을 동시에 활성화하고 감시합니다.

시스템의 행동은 두 규칙 간의 **'경쟁'**에 의해 결정됩니다.

> **"어느 규칙의 트리거 조건이 먼저 만족되는가?"**

* **시장이 꾸준히 계단식으로 상승한다면:** `규칙 #3 (계획된 익절)`이 먼저 발동될 가능성이 높습니다.
* **시장이 급등 후 갑자기 추세가 꺾인다면:** `규칙 #4 (트레일링 스탑)`이 `규칙 #3`의 조건이 만족되기 전에 먼저 발동하여 이익을 확보할 가능성이 높습니다.

이러한 경쟁 구조는 전략에 유연성을 부여하여, 다양한 시장 시나리오에 더 효과적으로 대응하게 만듭니다.

---

### ## 3. 시나리오: 추세 반전으로 인한 조기 익절

1.  **진입 및 불타기**: `규칙 #1`로 진입 후, 가격이 상승하여 `규칙 #2`가 두 번 실행되었습니다. 현재 포지션의 수익률은 12%입니다.

2.  **트레일링 스탑 활성화**: 수익률이 5%를 넘었으므로, `규칙 #4`의 트레일링 스탑 기능은 이미 활성화되어 실시간으로 포지션의 최고가를 추적하고 있습니다.

3.  **추세 반전**: 가격이 계속 상승하여 수익률 13%에서 최고점을 기록한 후, 갑자기 하락하여 9.5%가 되었습니다.
    * 이 하락 폭(약 3.5%)은 `규칙 #4`에 설정된 `trail_percent`(3%)를 초과했습니다.

4.  **조기 익절 발동**: `규칙 #4`의 `ProfitLossTrigger`가 **먼저** `True` 신호를 보냅니다.
    * `규칙 #2`와 `규칙 #3`은 다음 목표 수익률(15%)에 도달하지 못했으므로 아직 발동 조건이 충족되지 않은 상태입니다.

5.  **사이클 종료**: 엔진은 가장 먼저 신호를 보낸 **`규칙 #4`의 `FullPositionSell` 액션을 실행**하여 포지션을 전량 청산합니다.

> ✅ 결과적으로, 트레일링 스탑 규칙은 계획된 최종 목표가 오기 전에 추세의 약화를 감지하고 먼저 이익을 실현함으로써, 더 큰 하락으로부터 수익을 안전하게 지키는 역할을 성공적으로 수행했습니다.
```